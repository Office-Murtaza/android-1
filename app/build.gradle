plugins {
    id "com.android.application"

    id "kotlin-android"
    id "kotlin-kapt"
    id "kotlin-parcelize"

    id "androidx.navigation.safeargs.kotlin"

    id "com.google.gms.google-services"

    id "com.google.firebase.crashlytics"
    id "com.google.firebase.firebase-perf"
    id "com.google.firebase.appdistribution"
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"
    ndkVersion "21.3.6528147"
    defaultConfig {
        applicationId "com.belcobtm"
        minSdkVersion 24
        targetSdkVersion 31
        versionCode rootProject.gitVersionCode()
        versionName "2.5"
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        release {
            storeFile file("$rootDir/signing/keystore.jks") // to sign applications put the keys to the root folder
            storePassword "com.app.belcobtm"
            keyAlias "belcobtm"
            keyPassword "com.app.belcobtm"
        }
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            firebaseAppDistribution {
                groups = "testers"
            }
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-XXLanguage:-ProperCheckAnnotationsTargetInTypeUsePositions"]
    }

    flavorDimensions "version"
    productFlavors {
        prod {
            dimension "version"
            buildConfigField "String", "BASE_URL", "\"https://prod.belcobtm.com\""
            buildConfigField "String", "REFERRAL_URL", "\"https://belcobtm.com/r/\""
            buildConfigField "String", "BASE_SOCKET_URL", "\"ws://prod.belcobtm.com\""
            buildConfigField "String", "API_VERSION", "\"1\""
        }
        dev {
            dimension "version"
            buildConfigField "String", "BASE_URL", "\"https://test.belcowallet.com\""
            buildConfigField "String", "REFERRAL_URL", "\"https://belcowallet.com/r/\""
            buildConfigField "String", "BASE_SOCKET_URL", "\"ws://test.belcowallet.com\""
            buildConfigField "String", "API_VERSION", "\"1\""
        }
    }
    buildFeatures {
        viewBinding true
    }
    configurations.all {
        c ->
            c.resolutionStrategy.dependencySubstitution {
                all { DependencySubstitution dependency ->
                    if (dependency.requested.group == "org.bouncycastle") {
                        dependency.useTarget "org.bouncycastle:bcprov-jdk15to18:1.68"
                    }
                }
            }
    }
}

dependencies {

    // Core
    implementation libs.androidX.core
    implementation libs.koin

    // UI
    implementation libs.androidX.ui.values()
    implementation libs.ui.material
    implementation libs.ui.thirdParty.values()
    implementation(libs.ui.pinEntryEditText) {
        exclude group: "androidx.appcompat", module: "appcompat"
    }

    // Navigation
    implementation libs.navigation.values()

    // Lifecycle
    implementation libs.lifecycle.values()

    // Rest api
    implementation libs.retrofit.values()
    implementation libs.moshi.moshi
    kapt libs.moshi.moshiCodegen
    implementation libs.okhttp3.values()

    // Data base
    implementation libs.room.ktx
    implementation libs.room.runtime
    kapt libs.room.compiler

    // Cryptocurrency
    implementation libs.crypto.values()

    // Security
    implementation libs.androidX.security.values()
    implementation libs.cryptography

    // Images and Gifs
    implementation libs.glide
    implementation libs.gifs.values()

    // Permission dispatcher
    implementation libs.permissions.dispatcher
    kapt libs.permissions.processor

    // GMS
    implementation libs.googlePlay.values()

    // Firebase
    implementation libs.firebase.main.values()
    implementation(libs.firebase.performance, {
        exclude module: 'protolite-well-known-types'
        exclude group: "com.google.protobuf" // protobuf-lite that firebase-config and Tink depends on.
    })

    // Documents scanner
    implementation libs.acuant.values()

    // QR code
    implementation libs.zxing.core
    implementation(libs.zxing.embedded) { transitive = false }

    // Plaid
    implementation(libs.plaid, {
        // protobuf-lite that firebase-config and Tink depends on.
        exclude group: "com.google.protobuf"
    })

    // Support chat
    implementation libs.zendesk

}
